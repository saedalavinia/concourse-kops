---
## Based on the steps documented here: https://kubernetes.io/docs/setup/custom-cloud/kops/

groups:
- name: create
  jobs:
  - create-route53-zone
  - create-s3-bucket
  - deploy-k8s-cluster
- name: destroy
  jobs:
  - destroy-route53-zone
  - destroy-s3-bucket
  - destroy-k8s-cluster

jobs:
- name: create-route53-zone
  serial_groups: [terraform-route53]
  serial: true
  plan:
  - get: git-repository
    trigger: true
  - put: terraform
    params:
      terraform_source: git-repository/concourse/terraform/route53
      env_name: route53
      vars:
        hosted_zone: ((hosted_zone))

- name: create-s3-bucket
  serial_groups: [terraform-s3]
  serial: true
  plan:
  - get: git-repository
    trigger: true
  - put: terraform
    params:
      terraform_source: git-repository/concourse/terraform/s3
      env_name: s3
      vars:
        bucket_name: ((kops_state_bucket))


- name: deploy-k8s-cluster
  serial_groups: [kops]
  serial: true
  plan:
  - get: git-repository
    passed:
    - create-s3-bucket
    - create-route53-zone
    trigger: true
  - task: deploy
    file: git-repository/concourse/tasks/deploy-k8s-cluster.yml
    params:
      PUBLIC_KEY: ((public_ssh_key))
      AWS_ACCESS_KEY_ID: ((aws_access_key_id))
      AWS_SECRET_ACCESS_KEY: ((aws_secret_access_key))
      AWS_DEFAULT_REGION: ((region))



# ========================= Destroy =========================
- name: destroy-k8s-cluster
  serial_groups: [kops]
  serial: true
  plan:
  - get: git-repository
  - task: deploy
    file: git-repository/concourse/tasks/destroy-k8s-cluster.yml
    params:
      AWS_ACCESS_KEY_ID: ((aws_access_key_id))
      AWS_SECRET_ACCESS_KEY: ((aws_secret_access_key))
      AWS_DEFAULT_REGION: ((region))

- name: destroy-route53-zone
  serial_groups: [terraform-route53]
  serial: true
  plan:
  - get: git-repository
  - put: terraform
    params:
      terraform_source: git-repository/concourse/terraform/route53
      env_name: route53
      action: destroy
      vars:
        hosted_zone: ((hosted_zone))
    get_params:
      action: destroy

- name: destroy-s3-bucket
  serial_groups: [terraform-s3]
  serial: true
  plan:
  - get: git-repository
    passed: 
    - destroy-k8s-cluster
    trigger: true
  - put: terraform
    params:
      terraform_source: git-repository/concourse/terraform/s3
      env_name: s3
      action: destroy
      vars:
        bucket_name: ((kops_state_bucket))
    get_params:
      action: destroy


# ========================= Resource Types =========================
resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: latest


# ============================ Resources ============================

resources:
- name: git-repository
  type: git
  source:
    uri: ((git_repository))
    branch: master

- name: terraform
  type: terraform
  source:
    storage:
      bucket: ((ci_bucket))
      region_name: ((ci_bucket_region))
      bucket_path: terraform/((environment))
      access_key_id: ((aws_access_key_id))
      secret_access_key: ((aws_secret_access_key))
    vars:
      environment_tag: ((environment))
    env:
      AWS_ACCESS_KEY_ID: ((aws_access_key_id))
      AWS_SECRET_ACCESS_KEY: ((aws_secret_access_key))
      AWS_DEFAULT_REGION: ((region))


# - name: deploy-trigger
#   type: semver
#   source:
#     initial_version: 0.0.0
#     driver: s3
#       region_name: ((ci_bucket_region))
#       access_key_id: ((s3.access_aws_access_key_id))
#       secret_access_key: ((s3.aws_secret_access_key))
#       server_side_encryption: AES256
#     bucket: ((ci_bucket))
#     key: ci/trigger


